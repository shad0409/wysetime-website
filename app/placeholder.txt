const projects = await getProjects();

<div className="max-w-5xl mx-auto text-black">
<h1 className='text-7xl font-extrabold'>WyseTime Technologies</h1>

<h2 className='text-3xl font-bold py-10'>Test</h2>

<div className='mt-5 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8'>
{projects.map((project) => (
  <div key={project._id} className='border border-grey-500 rounded-lg'>
    {project.image && (
      <Image
      src={project.image}
      alt={project.name}
      width={250}
      height={100}
      className="object-cover rounded-lg border border-gray-500"
      /> 
    )}
    {project.name}
  </div>
))}
</div>
</div>

import {getProjects} from '@/sanity/sanity-utils'
import { Project } from '@/types/Project';
import React, { useEffect, useState } from 'react';
import Products from './ProductsConfig';

import ProductsImage1 from '../../../public/traffic_gif.gif'; // Ensure the correct path

const AboutProducts1: React.FC = () => {
  const [projects, setProjects] = useState<Project[]>([]);

  useEffect(() => {
    const fetchProjects = async () => {
      const projectsData = await getProjects();
      setProjects(projectsData);
    };

    fetchProjects();
  }, []); 

  return (
    <div className="products-container">
      <h2 className='product-heading'>Wyse <span className="text-red-600">Traffic</span></h2>
      <Products 
        image={ProductsImage1}
        title="Wyse-Traffic"
        description="In today's rapidly evolving urban landscape, an innovative AI solution is making significant strides in enhancing traffic management and safety. 
        This cutting-edge system leverages advanced video and image processing technologies to meticulously monitor and analyze traffic flow, vehicle types, and pedestrian movements in real-time. 
        By deploying deep learning algorithms, it intelligently identifies patterns and anomalies within vast streams of visual data captured from strategically placed cameras across urban areas. 
        This AI-driven approach enables the detection of various traffic-related information, including congestion levels, speed detection, accident recognition, and illegal parking incidents. 
        Furthermore, it assists in optimizing traffic signals and reducing response times to emergencies by providing precise, real-time insights to traffic authorities. 
        The system's robust analytics capabilities also support long-term urban planning and infrastructure development by offering detailed traffic trend analyses. 
        This AI solution not only enhances road safety but also contributes to the creation of smarter, more efficient cities. By seamlessly integrating with existing traffic management systems, 
        it represents a significant leap forward in the pursuit of sustainable urban mobility, demonstrating the transformative potential of artificial intelligence in addressing complex challenges in traffic management and safety."
        reverse={true}
      />
    </div>
  );
};

export default AboutProducts1;

2nd schema

import React, { useEffect, useState } from 'react';
import { getProjects } from '@/sanity/sanity-utils';
import { getHomeData } from '@/sanity/sanity-utils';  // Assuming this function is added
import { Image } from 'next-sanity/image';
import { PortableText } from 'next-sanity';
import { Home } from '@/types/Home';

const FacialMatching: React.FC = () => {
  const [homes, setHomes] = useState<Home[]>([]);

  useEffect(() => {
    const fetchData = async () => {
      const homeData = await getHomeData();
      const projectsData = await getProjects();
      setHomes(homeData);
    };

    fetchData();
  }, []); 

  return (
    <div className="products-container">
      <h2 className='product-heading'>Wyse <span className="text-red-600">Traffic</span></h2>
      {homes
        .filter((home) => home.name === 'test') // Assuming you want to filter on some property
        .map((home) => (
          <div key={home._id} className='border border-grey-500 rounded-lg'>
            {home.image && (
              <Image
                src={home.image}
                alt={home.name}
                width={500}
                height={500}
                className="object-cover rounded-lg border border-gray-500"
              />
            )}
            <PortableText value={home.content} /> 
          </div>
        ))}
    </div>
  );
};

export default FacialMatching;
